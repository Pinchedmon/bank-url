generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Client {
  id           Int           @id @default(autoincrement())
  fullName     String
  email        String        @unique
  phone        String
  address      String
  clientType   String        @default("INDIVIDUAL") // INDIVIDUAL или LEGAL_ENTITY
  passwordHash String // Добавляем поле для пароля
  roleId       Int
  role         Role          @relation(fields: [roleId], references: [id])
  applications Application[]
  profileImage String?
}

model Application {
  id              Int               @id @default(autoincrement())
  clientId        Int
  client          Client            @relation(fields: [clientId], references: [id])
  deviceId        Int?
  device          Device?           @relation(fields: [deviceId], references: [id])
  employeeId      Int?
  employee        Employee?         @relation(fields: [employeeId], references: [id])
  applicationDate DateTime          @default(now())
  status          String            @default("PENDING") // PENDING, APPROVED, REJECTED
  amountRequested Float
  term            Int
  monthlyPayment  Float?
  conditions      CreditCondition[]
}

model Device {
  id           Int           @id @default(autoincrement())
  position     String
  phone        String
  email        String
  applications Application[]
}

model CreditCondition {
  id             Int         @id @default(autoincrement())
  applicationId  Int
  application    Application @relation(fields: [applicationId], references: [id])
  interestRate   Float
  term           Int
  monthlyPayment Float
}

model Employee {
  id           Int           @id @default(autoincrement())
  fullName     String
  email        String        @unique
  phone        String
  passwordHash String // Добавляем поле для пароля
  roleId       Int
  role         Role          @relation(fields: [roleId], references: [id])
  applications Application[]
}

model Role {
  id        Int        @id @default(autoincrement())
  name      String     @unique // CLIENT, EMPLOYEE, ADMIN, 
  clients   Client[]
  employees Employee[]
}
