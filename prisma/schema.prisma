generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  userId        Int            @id @default(autoincrement())
  email         String         @unique
  phone         String?        @unique
  passwordHash  String
  fullName      String?
  passportData  String?
  profileImage  String?
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  bookings      Booking[]
  loyaltyPoints LoyaltyPoint[]
}

model Flight {
  flightId      Int          @id @default(autoincrement())
  flightNumber  String
  departureCity String
  arrivalCity   String
  departureTime DateTime
  arrivalTime   DateTime
  economySeats  Int
  vipSeats      Int
  economyPrice  Float
  vipPrice      Float
  status        FlightStatus @default(SCHEDULED)
  bookings      Booking[]
}

model Booking {
  bookingId   Int           @id @default(autoincrement())
  userId      Int
  flightId    Int
  class       Class
  seatCount   Int
  totalPrice  Float
  pointsUsed  Int           @default(0)
  status      BookingStatus @default(ACTIVE)
  createdAt   DateTime      @default(now())
  cancelledAt DateTime?
  user        User          @relation(fields: [userId], references: [userId], onDelete: Cascade)
  flight      Flight        @relation(fields: [flightId], references: [flightId], onDelete: Cascade)
}

model LoyaltyPoint {
  pointId     Int      @id @default(autoincrement())
  userId      Int
  points      Int
  description String?
  addedAt     DateTime @default(now())
  user        User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum FlightStatus {
  SCHEDULED
  DEPARTED
  DELAYED
  CANCELLED
}

enum Class {
  ECONOMY
  VIP
}

enum BookingStatus {
  ACTIVE
  CANCELLED
}
